//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExternalDataStoreServiceAccess.ServiceReference_DataStore {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_DataStore.IDataStoreServices")]
    public interface IDataStoreServices {
        
        // CODEGEN: Generating message contract since the wrapper name (RemoteFileInfo) of message RemoteFileInfo does not match the default value (UploadDatabaseFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataStoreServices/UploadDatabaseFile", ReplyAction="http://tempuri.org/IDataStoreServices/UploadDatabaseFileResponse")]
        ExternalDataStoreServiceAccess.ServiceReference_DataStore.ReturnValue UploadDatabaseFile(ExternalDataStoreServiceAccess.ServiceReference_DataStore.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataStoreServices/TestConnection", ReplyAction="http://tempuri.org/IDataStoreServices/TestConnectionResponse")]
        string TestConnection();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string BranchOfficeCode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string BranchOfficeName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool IsTestUpload;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string[] SimulatorDeviceIds;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string SimulatorSoftwareName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string SimulatorSoftwareVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string BranchOfficeCode, string BranchOfficeName, string FileName, bool IsTestUpload, long Length, string[] SimulatorDeviceIds, string SimulatorSoftwareName, string SimulatorSoftwareVersion, System.IO.Stream FileByteStream) {
            this.BranchOfficeCode = BranchOfficeCode;
            this.BranchOfficeName = BranchOfficeName;
            this.FileName = FileName;
            this.IsTestUpload = IsTestUpload;
            this.Length = Length;
            this.SimulatorDeviceIds = SimulatorDeviceIds;
            this.SimulatorSoftwareName = SimulatorSoftwareName;
            this.SimulatorSoftwareVersion = SimulatorSoftwareVersion;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnValue", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReturnValue {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public System.ServiceModel.FaultException Exception;
        
        public ReturnValue() {
        }
        
        public ReturnValue(System.ServiceModel.FaultException Exception) {
            this.Exception = Exception;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataStoreServicesChannel : ExternalDataStoreServiceAccess.ServiceReference_DataStore.IDataStoreServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataStoreServicesClient : System.ServiceModel.ClientBase<ExternalDataStoreServiceAccess.ServiceReference_DataStore.IDataStoreServices>, ExternalDataStoreServiceAccess.ServiceReference_DataStore.IDataStoreServices {
        
        public DataStoreServicesClient() {
        }
        
        public DataStoreServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataStoreServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataStoreServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataStoreServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ExternalDataStoreServiceAccess.ServiceReference_DataStore.ReturnValue ExternalDataStoreServiceAccess.ServiceReference_DataStore.IDataStoreServices.UploadDatabaseFile(ExternalDataStoreServiceAccess.ServiceReference_DataStore.RemoteFileInfo request) {
            return base.Channel.UploadDatabaseFile(request);
        }
        
        public System.ServiceModel.FaultException UploadDatabaseFile(string BranchOfficeCode, string BranchOfficeName, string FileName, bool IsTestUpload, long Length, string[] SimulatorDeviceIds, string SimulatorSoftwareName, string SimulatorSoftwareVersion, System.IO.Stream FileByteStream) {
            ExternalDataStoreServiceAccess.ServiceReference_DataStore.RemoteFileInfo inValue = new ExternalDataStoreServiceAccess.ServiceReference_DataStore.RemoteFileInfo();
            inValue.BranchOfficeCode = BranchOfficeCode;
            inValue.BranchOfficeName = BranchOfficeName;
            inValue.FileName = FileName;
            inValue.IsTestUpload = IsTestUpload;
            inValue.Length = Length;
            inValue.SimulatorDeviceIds = SimulatorDeviceIds;
            inValue.SimulatorSoftwareName = SimulatorSoftwareName;
            inValue.SimulatorSoftwareVersion = SimulatorSoftwareVersion;
            inValue.FileByteStream = FileByteStream;
            ExternalDataStoreServiceAccess.ServiceReference_DataStore.ReturnValue retVal = ((ExternalDataStoreServiceAccess.ServiceReference_DataStore.IDataStoreServices)(this)).UploadDatabaseFile(inValue);
            return retVal.Exception;
        }
        
        public string TestConnection() {
            return base.Channel.TestConnection();
        }
    }
}
