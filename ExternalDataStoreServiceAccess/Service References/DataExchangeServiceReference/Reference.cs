//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExternalDataStoreServiceAccess.DataExchangeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsapBranchOffice", Namespace="http://schemas.datacontract.org/2004/07/ISAP.SimulatorWcfServices")]
    [System.SerializableAttribute()]
    public partial class IsapBranchOffice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address_CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address_LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address_StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address_ZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address_Country {
            get {
                return this.Address_CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.Address_CountryField, value) != true)) {
                    this.Address_CountryField = value;
                    this.RaisePropertyChanged("Address_Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address_Location {
            get {
                return this.Address_LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.Address_LocationField, value) != true)) {
                    this.Address_LocationField = value;
                    this.RaisePropertyChanged("Address_Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address_Street {
            get {
                return this.Address_StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.Address_StreetField, value) != true)) {
                    this.Address_StreetField = value;
                    this.RaisePropertyChanged("Address_Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address_ZIP {
            get {
                return this.Address_ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.Address_ZIPField, value) != true)) {
                    this.Address_ZIPField = value;
                    this.RaisePropertyChanged("Address_ZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerOrderContract", Namespace="http://schemas.datacontract.org/2004/07/ISAP.SimulatorWcfServices")]
    [System.SerializableAttribute()]
    public partial class CustomerOrderContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingAddress_CountryShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingAddress_LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingAddress_StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingAddress_StreetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingAddress_ZIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardCode {
            get {
                return this.CardCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardCodeField, value) != true)) {
                    this.CardCodeField = value;
                    this.RaisePropertyChanged("CardCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardName {
            get {
                return this.CardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNameField, value) != true)) {
                    this.CardNameField = value;
                    this.RaisePropertyChanged("CardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderComment {
            get {
                return this.OrderCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCommentField, value) != true)) {
                    this.OrderCommentField = value;
                    this.RaisePropertyChanged("OrderComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingAddress_CountryShort {
            get {
                return this.ShippingAddress_CountryShortField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddress_CountryShortField, value) != true)) {
                    this.ShippingAddress_CountryShortField = value;
                    this.RaisePropertyChanged("ShippingAddress_CountryShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingAddress_Location {
            get {
                return this.ShippingAddress_LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddress_LocationField, value) != true)) {
                    this.ShippingAddress_LocationField = value;
                    this.RaisePropertyChanged("ShippingAddress_Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingAddress_Street {
            get {
                return this.ShippingAddress_StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddress_StreetField, value) != true)) {
                    this.ShippingAddress_StreetField = value;
                    this.RaisePropertyChanged("ShippingAddress_Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingAddress_StreetNumber {
            get {
                return this.ShippingAddress_StreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddress_StreetNumberField, value) != true)) {
                    this.ShippingAddress_StreetNumberField = value;
                    this.RaisePropertyChanged("ShippingAddress_StreetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingAddress_ZIP {
            get {
                return this.ShippingAddress_ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddress_ZIPField, value) != true)) {
                    this.ShippingAddress_ZIPField = value;
                    this.RaisePropertyChanged("ShippingAddress_ZIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceInformationContract", Namespace="http://schemas.datacontract.org/2004/07/ISAP.SimulatorWcfServices")]
    [System.SerializableAttribute()]
    public partial class DeviceInformationContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string FirmwareVersion {
            get {
                return this.FirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVersionField, value) != true)) {
                    this.FirmwareVersionField = value;
                    this.RaisePropertyChanged("FirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTypeField, value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationActivityReportContract", Namespace="http://schemas.datacontract.org/2004/07/ISAP.SimulatorWcfServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExternalDataStoreServiceAccess.DataExchangeServiceReference.MeasurementActivityReportContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExternalDataStoreServiceAccess.DataExchangeServiceReference.SimulationActivityReportContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ExternalDataStoreServiceAccess.DataExchangeServiceReference.ArchiveActivityReportContract))]
    public partial class ApplicationActivityReportContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivityDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivityDate {
            get {
                return this.ActivityDateField;
            }
            set {
                if ((this.ActivityDateField.Equals(value) != true)) {
                    this.ActivityDateField = value;
                    this.RaisePropertyChanged("ActivityDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementActivityReportContract", Namespace="http://schemas.datacontract.org/2004/07/ISAP.SimulatorWcfServices")]
    [System.SerializableAttribute()]
    public partial class MeasurementActivityReportContract : ExternalDataStoreServiceAccess.DataExchangeServiceReference.ApplicationActivityReportContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[][] MeasurementValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfMeasurementsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[][] MeasurementValues {
            get {
                return this.MeasurementValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementValuesField, value) != true)) {
                    this.MeasurementValuesField = value;
                    this.RaisePropertyChanged("MeasurementValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfMeasurements {
            get {
                return this.NumberOfMeasurementsField;
            }
            set {
                if ((this.NumberOfMeasurementsField.Equals(value) != true)) {
                    this.NumberOfMeasurementsField = value;
                    this.RaisePropertyChanged("NumberOfMeasurements");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimulationActivityReportContract", Namespace="http://schemas.datacontract.org/2004/07/ISAP.SimulatorWcfServices")]
    [System.SerializableAttribute()]
    public partial class SimulationActivityReportContract : ExternalDataStoreServiceAccess.DataExchangeServiceReference.ApplicationActivityReportContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastSimulationProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfSimulationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalSimulationProfileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastSimulationProfile {
            get {
                return this.LastSimulationProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.LastSimulationProfileField, value) != true)) {
                    this.LastSimulationProfileField = value;
                    this.RaisePropertyChanged("LastSimulationProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfSimulations {
            get {
                return this.NumberOfSimulationsField;
            }
            set {
                if ((this.NumberOfSimulationsField.Equals(value) != true)) {
                    this.NumberOfSimulationsField = value;
                    this.RaisePropertyChanged("NumberOfSimulations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalSimulationProfile {
            get {
                return this.OriginalSimulationProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalSimulationProfileField, value) != true)) {
                    this.OriginalSimulationProfileField = value;
                    this.RaisePropertyChanged("OriginalSimulationProfile");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveActivityReportContract", Namespace="http://schemas.datacontract.org/2004/07/ISAP.SimulatorWcfServices")]
    [System.SerializableAttribute()]
    public partial class ArchiveActivityReportContract : ExternalDataStoreServiceAccess.DataExchangeServiceReference.ApplicationActivityReportContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfCustomersSimulatedAgainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfCustomersViewedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfCustomersSimulatedAgain {
            get {
                return this.NumberOfCustomersSimulatedAgainField;
            }
            set {
                if ((this.NumberOfCustomersSimulatedAgainField.Equals(value) != true)) {
                    this.NumberOfCustomersSimulatedAgainField = value;
                    this.RaisePropertyChanged("NumberOfCustomersSimulatedAgain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfCustomersViewed {
            get {
                return this.NumberOfCustomersViewedField;
            }
            set {
                if ((this.NumberOfCustomersViewedField.Equals(value) != true)) {
                    this.NumberOfCustomersViewedField = value;
                    this.RaisePropertyChanged("NumberOfCustomersViewed");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataExchangeServiceReference.IDataExchangeService")]
    public interface IDataExchangeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchangeService/GetBranchOffices", ReplyAction="http://tempuri.org/IDataExchangeService/GetBranchOfficesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBranchOffices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchangeService/GetBranchOfficesForErgonometerNL", ReplyAction="http://tempuri.org/IDataExchangeService/GetBranchOfficesForErgonometerNLResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentNullException))]
        System.Exception GetBranchOfficesForErgonometerNL(out ExternalDataStoreServiceAccess.DataExchangeServiceReference.IsapBranchOffice[] offices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchangeService/UpdateBranchOfficeByCode", ReplyAction="http://tempuri.org/IDataExchangeService/UpdateBranchOfficeByCodeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentNullException))]
        System.Exception UpdateBranchOfficeByCode(string officeCode, string simulatorIds, string simulatorSoftwareName, string simulatorSoftwareVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchangeService/CommissionNewCustomerSalesOrders", ReplyAction="http://tempuri.org/IDataExchangeService/CommissionNewCustomerSalesOrdersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentNullException))]
        System.Exception CommissionNewCustomerSalesOrders(out int processedOrdersCnt, out System.Collections.Generic.Dictionary<ExternalDataStoreServiceAccess.DataExchangeServiceReference.CustomerOrderContract, string[]> failedOrdersWithValidationErrors, ExternalDataStoreServiceAccess.DataExchangeServiceReference.CustomerOrderContract[] orders);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchangeService/InsertLiegesimulatorCustomerDataBackup", ReplyAction="http://tempuri.org/IDataExchangeService/InsertLiegesimulatorCustomerDataBackupRes" +
            "ponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentNullException))]
        System.Exception InsertLiegesimulatorCustomerDataBackup(byte[] customerDataFolder, byte[] settingsFile, byte[] masterDataFolder, string softwareName, string softwareVersion, string branchOfficeName, string branchOfficeCode, bool isTestUpload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchangeService/CreateOrUpdateApplicationLocation", ReplyAction="http://tempuri.org/IDataExchangeService/CreateOrUpdateApplicationLocationResponse" +
            "")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentNullException))]
        System.Exception CreateOrUpdateApplicationLocation(string locationIdentifier, string locationName, ExternalDataStoreServiceAccess.DataExchangeServiceReference.DeviceInformationContract[] deviceInfos, string softwareName, string softwareVersion, string address_street, string address_ZIP, string address_location, string address_country, string phoneNumber, string email, string teamViewerId, string teamViewerPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchangeService/PostApplicationActivity", ReplyAction="http://tempuri.org/IDataExchangeService/PostApplicationActivityResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentNullException))]
        System.Exception PostApplicationActivity(string locationIdentifier, string locationName, string softwareName, string softwareVersion, ExternalDataStoreServiceAccess.DataExchangeServiceReference.ApplicationActivityReportContract activityReport);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataExchangeServiceChannel : ExternalDataStoreServiceAccess.DataExchangeServiceReference.IDataExchangeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataExchangeServiceClient : System.ServiceModel.ClientBase<ExternalDataStoreServiceAccess.DataExchangeServiceReference.IDataExchangeService>, ExternalDataStoreServiceAccess.DataExchangeServiceReference.IDataExchangeService {
        
        public DataExchangeServiceClient() {
        }
        
        public DataExchangeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataExchangeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBranchOffices() {
            return base.Channel.GetBranchOffices();
        }
        
        public System.Exception GetBranchOfficesForErgonometerNL(out ExternalDataStoreServiceAccess.DataExchangeServiceReference.IsapBranchOffice[] offices) {
            return base.Channel.GetBranchOfficesForErgonometerNL(out offices);
        }
        
        public System.Exception UpdateBranchOfficeByCode(string officeCode, string simulatorIds, string simulatorSoftwareName, string simulatorSoftwareVersion) {
            return base.Channel.UpdateBranchOfficeByCode(officeCode, simulatorIds, simulatorSoftwareName, simulatorSoftwareVersion);
        }
        
        public System.Exception CommissionNewCustomerSalesOrders(out int processedOrdersCnt, out System.Collections.Generic.Dictionary<ExternalDataStoreServiceAccess.DataExchangeServiceReference.CustomerOrderContract, string[]> failedOrdersWithValidationErrors, ExternalDataStoreServiceAccess.DataExchangeServiceReference.CustomerOrderContract[] orders) {
            return base.Channel.CommissionNewCustomerSalesOrders(out processedOrdersCnt, out failedOrdersWithValidationErrors, orders);
        }
        
        public System.Exception InsertLiegesimulatorCustomerDataBackup(byte[] customerDataFolder, byte[] settingsFile, byte[] masterDataFolder, string softwareName, string softwareVersion, string branchOfficeName, string branchOfficeCode, bool isTestUpload) {
            return base.Channel.InsertLiegesimulatorCustomerDataBackup(customerDataFolder, settingsFile, masterDataFolder, softwareName, softwareVersion, branchOfficeName, branchOfficeCode, isTestUpload);
        }
        
        public System.Exception CreateOrUpdateApplicationLocation(string locationIdentifier, string locationName, ExternalDataStoreServiceAccess.DataExchangeServiceReference.DeviceInformationContract[] deviceInfos, string softwareName, string softwareVersion, string address_street, string address_ZIP, string address_location, string address_country, string phoneNumber, string email, string teamViewerId, string teamViewerPassword) {
            return base.Channel.CreateOrUpdateApplicationLocation(locationIdentifier, locationName, deviceInfos, softwareName, softwareVersion, address_street, address_ZIP, address_location, address_country, phoneNumber, email, teamViewerId, teamViewerPassword);
        }
        
        public System.Exception PostApplicationActivity(string locationIdentifier, string locationName, string softwareName, string softwareVersion, ExternalDataStoreServiceAccess.DataExchangeServiceReference.ApplicationActivityReportContract activityReport) {
            return base.Channel.PostApplicationActivity(locationIdentifier, locationName, softwareName, softwareVersion, activityReport);
        }
    }
}
